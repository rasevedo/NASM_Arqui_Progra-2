     1                                  ;Hola mundo
     2                                  
     3                                  %include "io.mac"
     4                              <1> extern   proc_nwln, proc_PutCh, proc_PutStr
     5                              <1> extern   proc_GetStr, proc_GetCh
     6                              <1> extern   proc_PutInt, proc_GetInt
     7                              <1> extern   proc_PutLInt, proc_GetLInt
     8                              <1> 
     9                              <1> ;;-------------------------------------------------------------------
    10                              <1> %macro  .STARTUP  0
    11                              <1> ;group dgroup .data .bss
    12                              <1>         global   _start
    13                              <1> _start:
    14                              <1> %endmacro
    15                              <1> ;;-------------------------------------------------------------------
    16                              <1> 
    17                              <1> 
    18                              <1> ;;-------------------------------------------------------------------
    19                              <1> %macro  .EXIT  0
    20                              <1>         mov    EAX,1
    21                              <1>         xor    EBX,EBX
    22                              <1>         int    0x80
    23                              <1> %endmacro
    24                              <1> ;;-------------------------------------------------------------------
    25                              <1> 
    26                              <1> 
    27                              <1> ;;-------------------------------------------------------------------
    28                              <1> %macro  .DATA 0
    29                              <1>         segment .data
    30                              <1> %endmacro
    31                              <1> ;;-------------------------------------------------------------------
    32                              <1> 
    33                              <1> ;;-------------------------------------------------------------------
    34                              <1> %macro  .UDATA 0
    35                              <1>         segment .bss
    36                              <1> %endmacro
    37                              <1> ;;-------------------------------------------------------------------
    38                              <1> 
    39                              <1> ;;-------------------------------------------------------------------
    40                              <1> %macro  .CODE 0
    41                              <1>         segment .data
    42                              <1>         segment .bss
    43                              <1>         segment .text
    44                              <1> %endmacro
    45                              <1> ;;-------------------------------------------------------------------
    46                              <1> 
    47                              <1> 
    48                              <1> ;;-------------------------------------------------------------------
    49                              <1> %macro  nwln  0 
    50                              <1>         call    proc_nwln
    51                              <1> %endmacro
    52                              <1> ;;-------------------------------------------------------------------
    53                              <1> 
    54                              <1> 
    55                              <1> ;;-------------------------------------------------------------------
    56                              <1> %macro  PutCh  1 
    57                              <1>         push    AX
    58                              <1>         mov     AL,%1
    59                              <1>         call    proc_PutCh
    60                              <1>         pop     AX
    61                              <1> %endmacro
    62                              <1> ;;-------------------------------------------------------------------
    63                              <1> 
    64                              <1> 
    65                              <1> ;;-------------------------------------------------------------------
    66                              <1> %macro  PutStr  1 
    67                              <1>         push    ECX
    68                              <1>         mov     ECX,%1
    69                              <1>         call    proc_PutStr
    70                              <1>         pop     ECX
    71                              <1> %endmacro
    72                              <1> ;;-------------------------------------------------------------------
    73                              <1> 
    74                              <1> 
    75                              <1> ;;-------------------------------------------------------------------
    76                              <1> %macro  GetStr  1-2 81
    77                              <1>         push    ESI
    78                              <1>         push    EDI
    79                              <1>         mov     EDI,%1
    80                              <1>         mov     ESI,%2
    81                              <1>         call    proc_GetStr
    82                              <1>         pop     EDI
    83                              <1>         pop     ESI
    84                              <1> %endmacro
    85                              <1> ;;-------------------------------------------------------------------
    86                              <1> 
    87                              <1> 
    88                              <1> ;;-------------------------------------------------------------------
    89                              <1> %macro  GetCh   1
    90                              <1>         push    SI
    91                              <1>         xor     SI,SI
    92                              <1> %ifidni %1,AL
    93                              <1>         ;inc     SI
    94                              <1>         call    proc_GetCh
    95                              <1> %elifidni %1,AH
    96                              <1>         mov     SI,1
    97                              <1>         call    proc_GetCh
    98                              <1> %else
    99                              <1>         push    AX
   100                              <1>         call    proc_GetCh
   101                              <1>         mov     %1,AL
   102                              <1>         pop     AX
   103                              <1> %endif
   104                              <1>         pop     SI
   105                              <1> %endmacro
   106                              <1> ;;-------------------------------------------------------------------
   107                              <1> 
   108                              <1> 
   109                              <1> ;;-------------------------------------------------------------------
   110                              <1> %macro  PutInt  1
   111                              <1>         push    AX
   112                              <1>         mov     AX,%1
   113                              <1>         call    proc_PutInt
   114                              <1>         pop     AX
   115                              <1> %endmacro
   116                              <1> ;;-------------------------------------------------------------------
   117                              <1> 
   118                              <1> 
   119                              <1> ;;-------------------------------------------------------------------
   120                              <1> %macro  GetInt  1
   121                              <1> %ifnidni %1,AX
   122                              <1>         push    AX
   123                              <1>         call    proc_GetInt
   124                              <1>         mov     %1,AX
   125                              <1> 	  pop     AX
   126                              <1> %else 
   127                              <1>         call  proc_GetInt
   128                              <1> %endif
   129                              <1> %endmacro
   130                              <1> ;;-------------------------------------------------------------------
   131                              <1> 
   132                              <1> ;;-------------------------------------------------------------------
   133                              <1> %macro  PutLInt  1
   134                              <1>         push    EAX
   135                              <1>         mov     EAX,%1
   136                              <1>         call    proc_PutLInt
   137                              <1>         pop     EAX
   138                              <1> %endmacro
   139                              <1> ;;-------------------------------------------------------------------
   140                              <1> 
   141                              <1> ;;-------------------------------------------------------------------
   142                              <1> %macro  GetLInt  1
   143                              <1> %ifnidni %1,EAX
   144                              <1>         push    EAX
   145                              <1>         call    proc_GetLInt
   146                              <1>         mov     %1,EAX
   147                              <1> 	  pop     EAX
   148                              <1> %else 
   149                              <1>         call  proc_GetLInt
   150                              <1> %endif
   151                              <1> %endmacro
   152                              <1> ;;-------------------------------------------------------------------
   153                              <1> 
   154                                  
   155                                  .UDATA ; datos no inicializados
   156                              <1>  segment .bss
   157                                  
   158                                  
   159                                  .DATA  ; datos inicializados
   160                              <1>  segment .data
   161                                  
   162 00000000 486F6C61206D756E64-     	holamundo db "Hola mundo",0
   163 00000009 6F00               
   164                                  
   165                                  .CODE
   166                              <1>  segment .data
   167                              <1>  segment .bss
   168                              <1>  segment .text
   169                                  	.STARTUP
   170                              <1> 
   171                              <1>  global _start
   172                              <1> _start:
   173                                  	
   174                                  	PutStr holamundo
   175 00000000 51                  <1>  push ECX
   176 00000001 B9[00000000]        <1>  mov ECX,%1
   177 00000006 E8(00000000)        <1>  call proc_PutStr
   178 0000000B 59                  <1>  pop ECX
   179                                  	
   180                                  	
   181                                  .EXIT
   182 0000000C B801000000          <1>  mov EAX,1
   183 00000011 31DB                <1>  xor EBX,EBX
   184 00000013 CD80                <1>  int 0x80
